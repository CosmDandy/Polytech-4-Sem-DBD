version: "3.9"
services:
  web:
    container_name: web
    build: web/
    environment:
      - FLASK_ENV=development
      - PYTHON UNBUFFERED=True
    restart: on-failure
    volumes:
      - ./web:/web
    ports:
      - "5001:5001"
    networks:
      - ngrok_net
      - postgres_net
      - redis_net
      - clickhouse_net
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 300M
    depends_on:
      - postgres
    command: python3 server.py
  ngrok:
    container_name: ngrok
    image: shkoliar/ngrok:latest
    environment:
      PROTOCOL: "http"
      REGION: "eu"
      DOMAIN: "web"
      AUTH_TOKEN: "1WwFAxw7gHT6DL44s0wUvqnPH7I_6UnBL4j2tNuGxCNcQB3KQ"
      PORT: "5001"
    ports:
      - "4551:4551"
    networks:
      - ngrok_net
    deploy:
      resources:
        limits:
          cpus: '0.05'
          memory: 150M
    depends_on:
      - web
  #  grafana:
  #    container_name: grafana
  #    image: grafana/grafana:latest
  #    ports:
  #      - '3000:3000'
  #    restart: unless-stopped
  #    volumes:
  #      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
  #      - ./grafana-data:/var/lib/grafana
  #    depends_on:
  #      - ch-server
  #    networks:
  #      - clickhouse_net
  #  redis:
  #    container_name: redis
  #    image: cosmdandy/arm32v6-redis:latest
  #    restart: always
  #    entrypoint: redis-server --appendonly yes --requirepass admin --maxmemory 512mb --maxmemory-policy allkeys-lru
  #    networks:
  #      - redis_net
  #    ports:
  #      - "6379:6379"
  #    volumes:
  #      - ./redis/data:/data
  #    deploy:
  #      resources:
  #        limits:
  #          cpus: '0.7'
  #          memory: 3G
  #  redisinsight:
  #    container_name: redisinsight
  #    image: redislabs/redisinsight:latest
  #    ports:
  #      - '8001:8001'
  #    volumes:
  #      - ./redis/redisinsight:/db
  #    networks:
  #      - redis_net
  #    deploy:
  #      resources:
  #        limits:
  #          cpus: '0.1'
  #          memory: 300M
  #    depends_on:
  #      - redis
  #
  #  clickhouse_server:
  #    container_name: clickhouse_server
  #    image: cosmdandy/arm32v6-clickhouse_server:latest
  #    ports:
  #      - "8123:8123"
  #    volumes:
  #      - ./clickhouse/data:/var/lib/clickhouse
  #    networks:
  #      - clickhouse_net
  #    deploy:
  #      resources:
  #        limits:
  #          cpus: '0.4'
  #          memory: 2G
  #  clickhouse_client:
  #    container_name: clickhouse_client
  #    image: cosmdandy/arm32v6-clickhouse_client:latest
  #    entrypoint:
  #      - /bin/sleep
  #    command:
  #      - infinity
  #    networks:
  #      - clickhouse_net
  #    deploy:
  #      resources:
  #        limits:
  #          cpus: '0.1'
  #          memory: 300M

  postgres:
    container_name: postgres
    build: postgres/
    environment:
      #      POSTGRES_DB: "library"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin"
      PGDATA: "/var/lib/postgresql/data/pgdata"
      POSTGRES_MULTIPLE_EXTENSIONS: "postgis,hstore,postgis_topology,postgis_raster,pgrouting"
      RUN_AS_ROOT: "true"
    volumes:
      - ./postgres/SQL:/docker-entrypoint-initdb.d
      - ./postgres/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    networks:
      - postgres_net
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - ./postgres/pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M
    networks:
      - postgres_net
    depends_on:
      - postgres
networks:
  postgres_net:
    driver: bridge
  ngrok_net:
    driver: bridge
  redis_net:
    driver: bridge
  clickhouse_net:
    driver: bridge